name: Build Game Executables

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable for ${{ matrix.os }}
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            pyinstaller main.py --name "SpeedyDot" --onefile --noconsole --add-data "assets;assets" --icon=icon.ico
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            pyinstaller main.py --name "SpeedyDot" --onefile --noconsole --add-data "assets:assets" --icon=icon.icns
          elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            pyinstaller main.py --name "SpeedyDot" --onefile --noconsole --add-data "assets:assets"
          fi

      - name: Upload Windows Executable
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@8e8f7c7b35e25513d3bcd1a119e2f42cba6e53ea
        with:
          name: SpeedyDot-Windows
          path: dist/SpeedyDot.exe

      - name: Upload macOS Executable
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@8e8f7c7b35e25513d3bcd1a119e2f42cba6e53ea
        with:
          name: SpeedyDot-macOS
          path: dist/SpeedyDot.app

      - name: Upload Linux Executable
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@8e8f7c7b35e25513d3bcd1a119e2f42cba6e53ea
        with:
          name: SpeedyDot-Linux
          path: dist/SpeedyDot
